AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ReportsTableName:
    Type: "String"
    Default: "reports"
  GroupIndexName:
    Type: "String"
    Default: "group-index"

Resources:
  ReportsTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      TableName: !Ref "ReportsTableName"
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
        - AttributeName: "groupID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: !Ref "GroupIndexName"
          KeySchema:
            - AttributeName: "groupID"
              KeyType: "HASH"
            - AttributeName: "ID"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "INCLUDE"
            NonKeyAttributes:
              - "title"
              - "createdDate"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      BillingMode: "PROVISIONED"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      StreamSpecification:
        StreamViewType: "NEW_IMAGE"

  ReportsTableWriteCapacityScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    DependsOn: "ReportsTable"
    Properties:
      MaxCapacity: 5
      MinCapacity: 1
      ResourceId: !Sub "table/${ReportsTableName}"
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
      ScalableDimension: "dynamodb:table:WriteCapacityUnits"
      ServiceNamespace: "dynamodb"

  ReportsTableWriteScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: !Sub "${ReportsTableName}-write-scaling-policy"
      PolicyType: "TargetTrackingScaling"
      ScalingTargetId: !Ref "ReportsTableWriteCapacityScalableTarget"
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: "DynamoDBWriteCapacityUtilization"
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 80

  ReportsTableReadCapacityScalableTarget:
    Type: "AWS::ApplicationAutoScaling::ScalableTarget"
    DependsOn: "ReportsTable"
    Properties:
      MaxCapacity: 5
      MinCapacity: 1
      ResourceId: !Sub "table/${ReportsTableName}"
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable"
      ScalableDimension: "dynamodb:table:ReadCapacityUnits"
      ServiceNamespace: "dynamodb"

  ReportsTableReadScalingPolicy:
    Type: "AWS::ApplicationAutoScaling::ScalingPolicy"
    Properties:
      PolicyName: !Sub "${ReportsTableName}-read-scaling-policy"
      PolicyType: "TargetTrackingScaling"
      ScalingTargetId: !Ref "ReportsTableReadCapacityScalableTarget"
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: "DynamoDBReadCapacityUtilization"
        ScaleInCooldown: 60
        ScaleOutCooldown: 60
        TargetValue: 80

Outputs:
  ReportsTableName:
    Value: !Ref "ReportsTableName"
  ReportsTableStreamArn:
    Value: !GetAtt "ReportsTable.StreamArn"
  ReportsTableGroupIndexName:
    Value: !Ref "GroupIndexName"
